# Figure 8: C++ BTree Delete vs Rust BTree Delete

import matplotlib.pyplot as plt
y = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200, 5300, 5400, 5500, 5600, 5700, 5800, 5900, 6000, 6100, 6200, 6300, 6400, 6500, 6600, 6700, 6800, 6900, 7000, 7100, 7200, 7300, 7400, 7500, 7600, 7700, 7800, 7900, 8000, 8100, 8200, 8300, 8400, 8500, 8600, 8700, 8800, 8900, 9000, 9100, 9200, 9300, 9400, 9500, 9600, 9700, 9800, 9900, 10000]
p1, = plt.plot(y, [0.000002, 0.000003, 0.000004, 0.000005, 0.000007, 0.000008, 0.000010, 0.000010, 0.000012, 0.000012, 0.000014, 0.000015, 0.000017, 0.000018, 0.000020, 0.000020, 0.000023, 0.000023, 0.000026, 0.000026, 0.000029, 0.000028, 0.000031, 0.000030, 0.000034, 0.000033, 0.000036, 0.000035, 0.000039, 0.000039, 0.000043, 0.000043, 0.000046, 0.000046, 0.000048, 0.000048, 0.000049, 0.000049, 0.000053, 0.000052, 0.000055, 0.000052, 0.000058, 0.000055, 0.000060, 0.000058, 0.000061, 0.000061, 0.000063, 0.000064, 0.000067, 0.000066, 0.000068, 0.000068, 0.000070, 0.000070, 0.000073, 0.000073, 0.000077, 0.000078, 0.000082, 0.000081, 0.000088, 0.000083, 0.000095, 0.000092, 0.000098, 0.000093, 0.000096, 0.000092, 0.000097, 0.000095, 0.000098, 0.000098, 0.000102, 0.000104, 0.000110, 0.000107, 0.000113, 0.000108, 0.000115, 0.000109, 0.000116, 0.000113, 0.000119, 0.000122, 0.000123, 0.000115, 0.000123, 0.000122, 0.000127, 0.000123, 0.000134, 0.000136, 0.000142, 0.000135, 0.000143, 0.000132, 0.000136, 0.000140], label='C++ -O2 std::multimap<uint64_t,double>', marker='o')
p2, = plt.plot(y, [0.0000061378999999994, 0.000013381799999999796, 0.00002093139999999637, 0.00002857459999999866, 0.00003636929999999964, 0.00004418669999999771, 0.00005230970000000458, 0.00006028709999999414, 0.0000687765999999992, 0.00007779870000000336, 0.00008618819999999448, 0.00009479149999999981, 0.00010324640000000307, 0.00011191730000000122, 0.00012023539999999499, 0.00012957480000000163, 0.00013831489999999898, 0.0001472018999999939, 0.0001559906000000003, 0.00016034140000000888, 0.00016856180000000324, 0.00017813120000000293, 0.0001875383000000072, 0.00019573380000000606, 0.0002038698999999979, 0.00021301490000000828, 0.00022203550000000365, 0.0002288773999999925, 0.00023491119999999958, 0.00024701390000001047, 0.0002560554999999874, 0.00026227219999999863, 0.0002699020000000011, 0.00027926649999999786, 0.00029426110000000343, 0.00030401790000000764, 0.00031959329999999367, 0.0003203133000000071, 0.0003306210000000064, 0.00034680429999999586, 0.00034818069999999326, 0.00035723720000000847, 0.000370134599999997, 0.00038225569999999874, 0.0003868678000000051, 0.00039868649999999294, 0.0004048235, 0.0004159753999999917, 0.000427826299999996, 0.0004353030000000004, 0.0004512027999999946, 0.000449056099999998, 0.000458033999999999, 0.00046723890000000673, 0.0004820098999999956, 0.0004922347000000083, 0.0005085407999999985, 0.0005080152999999956, 0.0005188049000000021, 0.0005198528999999988, 0.0005270286999999979, 0.0005395848999999939, 0.0005582015999999968, 0.0005587650999999949, 0.000566367199999996, 0.0005771107000000082, 0.0005864429999999949, 0.0006064359000000114, 0.0006053692999999986, 0.0006204704000000002, 0.0006407038999999994, 0.0006540606000000033, 0.00067167330000001, 0.0006730412000000085, 0.0006802333000000035, 0.0006894953000000049, 0.0007083093000000007, 0.000711769899999997, 0.0007263659999999964, 0.0007342354999999955, 0.0007587151999999948, 0.0007673513000000002, 0.0007811018000000066, 0.0007870777000000057, 0.0008024766000000087, 0.0008056106000000021, 0.0008165651999999989, 0.0008352178999999916, 0.0008493982999999919, 0.0008620702999999896, 0.0008695290999999923, 0.0008800949999999955, 0.0008749872000000002, 0.0008891227000000049, 0.0009005571000000021, 0.000907124400000006, 0.0009105308000000069, 0.0009225350000000017, 0.0009320153000000062, 0.0009400200000000053], label='Rust --release std::collections::BTreeMap<u64,f64>', marker='x')
#p3, = plt.plot(y, [300, 400, 500, 600, 700, 300, 400, 500, 600, 700], label='steve', marker='*')

plt.legend(handles=[p1, p2], fontsize='14')

plt.ylabel('Average delay over 10,000 runs (sec.)', fontsize='14', fontweight='bold')
plt.xlabel('Number of items numbers deleted', fontsize='14', fontweight='bold')
plt.show()