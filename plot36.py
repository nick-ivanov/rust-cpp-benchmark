# Figure 6: C++ HashMap Delete vs Rust HashMap Delete

import matplotlib.pyplot as plt
y = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200, 5300, 5400, 5500, 5600, 5700, 5800, 5900, 6000, 6100, 6200, 6300, 6400, 6500, 6600, 6700, 6800, 6900, 7000, 7100, 7200, 7300, 7400, 7500, 7600, 7700, 7800, 7900, 8000, 8100, 8200, 8300, 8400, 8500, 8600, 8700, 8800, 8900, 9000, 9100, 9200, 9300, 9400, 9500, 9600, 9700, 9800, 9900, 10000]
p1, = plt.plot(y, [0.000002, 0.000003, 0.000004, 0.000006, 0.000007, 0.000009, 0.000010, 0.000011, 0.000013, 0.000014, 0.000016, 0.000017, 0.000018, 0.000020, 0.000021, 0.000023, 0.000024, 0.000026, 0.000027, 0.000028, 0.000030, 0.000031, 0.000033, 0.000034, 0.000035, 0.000037, 0.000038, 0.000040, 0.000041, 0.000043, 0.000045, 0.000045, 0.000047, 0.000048, 0.000050, 0.000051, 0.000052, 0.000055, 0.000056, 0.000057, 0.000059, 0.000061, 0.000062, 0.000063, 0.000065, 0.000067, 0.000068, 0.000069, 0.000071, 0.000072, 0.000074, 0.000075, 0.000076, 0.000078, 0.000079, 0.000081, 0.000082, 0.000084, 0.000085, 0.000086, 0.000088, 0.000089, 0.000091, 0.000093, 0.000095, 0.000096, 0.000098, 0.000099, 0.000100, 0.000102, 0.000103, 0.000105, 0.000107, 0.000109, 0.000111, 0.000113, 0.000113, 0.000115, 0.000117, 0.000118, 0.000119, 0.000121, 0.000123, 0.000125, 0.000126, 0.000128, 0.000129, 0.000131, 0.000132, 0.000133, 0.000135, 0.000137, 0.000138, 0.000140, 0.000142, 0.000145, 0.000145, 0.000146, 0.000147, 0.000149], label='C++ -O2 std::unordered_multimap<uint64_t,double>', marker='o')
p2, = plt.plot(y, [0.0000031044999999996867, 0.000006004599999999494, 0.000007227999999999361, 0.000011985499999998713, 0.000011422999999998323, 0.000014431199999998773, 0.000018411699999998284, 0.00002407769999999738, 0.000020394399999997424, 0.000023396599999997227, 0.00002682539999999985, 0.000028324499999998963, 0.00003186539999999995, 0.000036374999999999976, 0.00004220450000000119, 0.000048271500000001444, 0.00005509420000000303, 0.000040309000000001264, 0.00004275169999999714, 0.000045288399999999815, 0.00004737510000000023, 0.000049128400000001717, 0.00005350840000000331, 0.000056734400000000776, 0.00005882449999999606, 0.00006292389999999767, 0.00006656470000000031, 0.00007077010000000062, 0.00007895410000000179, 0.00008807950000000247, 0.00009289969999999722, 0.0000984673000000001, 0.00010445140000000365, 0.00011348589999999981, 0.000120609899999998, 0.00008319100000000555, 0.00008633490000000515, 0.00008673619999999395, 0.00008905009999999343, 0.00009291409999999696, 0.00009497529999999952, 0.00009692830000000047, 0.00009905510000000054, 0.0001017714000000018, 0.00010670710000000587, 0.00010977700000000437, 0.00011298829999999981, 0.00011743159999999733, 0.00012003909999999625, 0.0001267769999999999, 0.00012931730000000164, 0.00013195660000000296, 0.00013656000000000326, 0.00014171269999999436, 0.00014443289999999502, 0.00014864869999999612, 0.0001591352000000046, 0.00016649650000000293, 0.00016603400000000387, 0.00016955380000000008, 0.00017593159999999697, 0.00018618110000000193, 0.00019189140000000387, 0.0001990179999999999, 0.0002036478999999959, 0.00021211590000000288, 0.000220526200000005, 0.00022749839999999737, 0.00023399639999999752, 0.00024101130000000247, 0.00024778580000000996, 0.00016747430000000414, 0.0001688029000000019, 0.0001801210999999992, 0.00017610769999999593, 0.00017856529999999964, 0.0001820708000000004, 0.00018476500000000185, 0.00018645310000000182, 0.00018837400000000352, 0.0001956318000000033, 0.00020313660000000126, 0.00020157909999999566, 0.00020215109999999559, 0.00020193879999999532, 0.000204555899999996, 0.00020792450000000015, 0.00021153310000000385, 0.00021612510000000468, 0.00021855350000000504, 0.00022145930000000313, 0.00023001049999999825, 0.00023160339999999345, 0.0002279428999999952, 0.0002407754999999998, 0.0002453633000000052, 0.0002471954000000081, 0.00025182090000000403, 0.0002496235000000055, 0.0002508147000000041], label='Rust --release std::collections::HashMap<u64,f64>', marker='x')
#p3, = plt.plot(y, [300, 400, 500, 600, 700, 300, 400, 500, 600, 700], label='steve', marker='*')

plt.legend(handles=[p1, p2], fontsize='14')

plt.ylabel('Average delay over 10,000 runs (sec.)', fontsize='14', fontweight='bold')
plt.xlabel('Number of items numbers deleted', fontsize='14', fontweight='bold')
plt.show()