# Figure 5: C++ HashMap Insert vs Rust HashMap Insert

import matplotlib.pyplot as plt
y = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200, 5300, 5400, 5500, 5600, 5700, 5800, 5900, 6000, 6100, 6200, 6300, 6400, 6500, 6600, 6700, 6800, 6900, 7000, 7100, 7200, 7300, 7400, 7500, 7600, 7700, 7800, 7900, 8000, 8100, 8200, 8300, 8400, 8500, 8600, 8700, 8800, 8900, 9000, 9100, 9200, 9300, 9400, 9500, 9600, 9700, 9800, 9900, 10000]
p1, = plt.plot(y, [0.000003, 0.000006, 0.000010, 0.000012, 0.000014, 0.000019, 0.000021, 0.000023, 0.000025, 0.000028, 0.000029, 0.000037, 0.000039, 0.000040, 0.000043, 0.000046, 0.000047, 0.000049, 0.000051, 0.000053, 0.000057, 0.000058, 0.000060, 0.000073, 0.000075, 0.000077, 0.000079, 0.000081, 0.000083, 0.000086, 0.000089, 0.000089, 0.000092, 0.000093, 0.000098, 0.000100, 0.000103, 0.000106, 0.000106, 0.000109, 0.000112, 0.000114, 0.000117, 0.000119, 0.000121, 0.000121, 0.000123, 0.000125, 0.000128, 0.000130, 0.000162, 0.000164, 0.000165, 0.000168, 0.000170, 0.000172, 0.000175, 0.000178, 0.000179, 0.000180, 0.000181, 0.000180, 0.000183, 0.000185, 0.000188, 0.000190, 0.000192, 0.000195, 0.000197, 0.000201, 0.000202, 0.000206, 0.000208, 0.000212, 0.000216, 0.000221, 0.000213, 0.000215, 0.000219, 0.000221, 0.000222, 0.000225, 0.000229, 0.000232, 0.000233, 0.000235, 0.000238, 0.000240, 0.000242, 0.000244, 0.000247, 0.000249, 0.000251, 0.000254, 0.000258, 0.000267, 0.000261, 0.000263, 0.000265, 0.000268], label='C++ -O2 std::unordered_multimap<uint64_t,double>', marker='o')
p2, = plt.plot(y, [0.000005053099999999549, 0.00000954939999999864, 0.00001631779999999855, 0.000018417799999998162, 0.00002972599999999907, 0.000032044799999999975, 0.000034079999999999504, 0.0000367728000000014, 0.00005707720000000071, 0.000060097299999993405, 0.00006374769999999838, 0.00006213919999999542, 0.00006397749999999929, 0.0000668681999999999, 0.00007093030000000062, 0.00007324479999999696, 0.00007600310000000205, 0.0001162550999999966, 0.00011850499999999477, 0.00012070759999999397, 0.0001285802000000017, 0.00012965389999999857, 0.00013256920000000278, 0.00013649270000000503, 0.0001352451000000032, 0.00013796690000000014, 0.00013966269999999553, 0.00014111779999999166, 0.00015019079999999436, 0.0001620017999999996, 0.00016294760000000016, 0.00016239470000000276, 0.00016274400000000728, 0.00016769640000000453, 0.00016949659999999884, 0.00024612310000000367, 0.00024770830000000316, 0.0002468690000000098, 0.00024873410000000716, 0.0002541929000000014, 0.00026732590000000476, 0.000267862000000005, 0.00026846100000000374, 0.0002708921999999971, 0.00027776649999999614, 0.000279964299999995, 0.00028221379999999785, 0.00028700449999999626, 0.00028698719999999665, 0.0002966026000000011, 0.0002956298999999991, 0.00029471789999999896, 0.0002990418000000029, 0.0003034824000000105, 0.0003014067000000084, 0.00030190690000000584, 0.0003168043000000028, 0.0003232499000000052, 0.0003138491999999941, 0.00031198359999999196, 0.0003155493999999959, 0.00032559650000000125, 0.00032575140000000045, 0.0003301803000000038, 0.0003283125000000034, 0.00033797680000000437, 0.00034240620000000567, 0.0003443950000000015, 0.0003455244999999995, 0.00034882630000000135, 0.0003531469000000059, 0.0005133517999999984, 0.0005124126999999973, 0.0005381598999999924, 0.0005231125999999943, 0.0005241575999999952, 0.0005287003999999992, 0.0005328382999999968, 0.0005301487999999975, 0.0005303613999999968, 0.0005476205999999967, 0.0005607430999999962, 0.0005578490999999973, 0.0005530303999999935, 0.0005473427999999948, 0.0005486604999999949, 0.0005526086999999955, 0.0005587611999999947, 0.000563914399999998, 0.0005643737999999994, 0.0005648494999999961, 0.0005788525000000044, 0.0005786243999999966, 0.0005648314999999944, 0.0005888950999999989, 0.0005939038000000013, 0.000591947399999999, 0.0005973798999999992, 0.0005848869999999994, 0.0005820920999999973], label='Rust --release std::collections::HashMap<u64,f64>', marker='x')
#p3, = plt.plot(y, [300, 400, 500, 600, 700, 300, 400, 500, 600, 700], label='steve', marker='*')

plt.legend(handles=[p1, p2], fontsize='14')

plt.ylabel('Average delay over 10,000 runs (sec.)', fontsize='14', fontweight='bold')
plt.xlabel('Number of items numbers inserted', fontsize='14', fontweight='bold')
plt.show()